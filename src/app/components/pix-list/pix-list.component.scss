.pix-circle-card {
  box-sizing: border-box;
  position: relative;
  width: 50%;
  margin: 40px auto;
  padding: 10px 30px;
  box-shadow: lightgray 4px 4px 20px;
  border-radius: 20px;
  img {
    width: 100%;
    border-radius: 20px;
  }
  h2 {
    margin-bottom: 0;
  }
  p {
    font-weight: 300;
    font-size: 16px;
  }
  button {
    box-sizing: border-box;
    padding: 5px 10px;
    margin-top: 1rem;
    border-radius:  20px;
    box-shadow: lightgray 3px 3px 7px;
    margin-right: 20px;
    outline: none;
    font-size: 14px;
    font-weight: 500;
    &:active {
      transform: translate(1px, 1px);
      // Simule l'appui sur le button au click
      box-shadow: lightgray 0 0 5px;
    }
  }
}
.ribbon {
  font-size: 28px;
  font-weight: bold;
  color: #fff;
  position: absolute;
  top: 0;
  right: 0;
  line-height: 1.8;
  padding-inline: 1lh;
  padding-bottom: var(--f);
  border-image: conic-gradient(#0008 0 0) 51%/var(--f);
  clip-path: polygon(
    100% calc(100% - var(--f)),100% 100%,calc(100% - var(--f)) calc(100% - var(--f)),var(--f) calc(100% - var(--f)), 0 100%,0 calc(100% - var(--f)),999px calc(100% - var(--f) - 999px),calc(100% - 999px) calc(100% - var(--f) - 999px));
  transform: translate(calc((1 - cos(45deg))*100%), -100%) rotate(45deg);
  transform-origin: 0% 100%;
  background-color: var(--button-background-color);
  
  /* Permet de rendre l'élément visible/invisible avec une transition fluide */
  opacity: 0;
  /* Masque complètement l'élément quand il est invisible pour éviter qu'il occupe de l'esapce dans le DOM */
  visibility: hidden;
  /* empêche les interactions avec l'élément lorsqu'il est invisible */
  pointer-events: none;

  transition: opacity 0.8s ease-in-out, visibility 0.8s ease-in-out;
}

/* État "liked" */
.ribbon.liked {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}
